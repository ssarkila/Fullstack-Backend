{"version":3,"sources":["personService.js","Filter.js","PersonForm.js","Button.js","Persons.js","Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","props","value","searchName","onChange","handleSearhName","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","onClick","addPerson","type","Button","name","text","Persons","persons","map","person","toLowerCase","includes","key","number","deletePerson","Notification","message","className","App","useState","setPersons","setSearchName","setNewName","setNewNumber","notificationMessage","setNotificationMessage","setClassName","useEffect","personService","console","log","event","target","preventDefault","findIndex","p","find","window","confirm","changedPerson","setTimeout","catch","error","maxId","Math","max","concat","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77a4c8d3.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id, newObject) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Filter = props => {\r\n    return (\r\n        <div>\r\n            filted shown with: <input \r\n                value={props.searchName}\r\n                onChange={props.handleSearhName}/>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = props => {\r\n    return (\r\n        <form>\r\n        <div>\r\n          name: <input \r\n                    value={props.newName}\r\n                    onChange={props.handleNameChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input \r\n                    value={props.newNumber}\r\n                    onChange={props.handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button onClick={props.addPerson} type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Button = ({ id, name, onClick, text }) => (\r\n  <button id = {id} name = {name}  onClick={onClick}>\r\n    {text}  \r\n  </button>\r\n)\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Persons = props => {\r\n    return (\r\n        <div>\r\n            {props.persons.map((person) => {\r\n            return(\r\n                person.name.toLowerCase().includes(props.searchName.toLowerCase()) ?\r\n                <p key={person.name}>{person.name} {person.number} <Button id={person.id} name={person.name} onClick={props.deletePerson} text='delete' /></p> : null)}\r\n            )}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Persons;","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './personService'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ searchName, setSearchName ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n  const [ className, setClassName] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n\t\tconsole.log('response', response)\n        setPersons(response)\n      })\n    }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if(persons.findIndex(p => p.name===newName) !== -1)\n    {\n      const person = persons.find(p => p.name === newName)\n      if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`))\n      {\n        const changedPerson = { ...person, number: newNumber }\n        personService\n        .update(person.id, changedPerson)\n        .then(response => {\n          setPersons(persons.map(person => person.name !== newName ? person : response))\n          setClassName('notification')\n          setNotificationMessage(`Updated ${newName} number to ${newNumber}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setClassName(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(`Information of ${person.name} has already been removed from server`, error)\n          setClassName('error')\n          setNotificationMessage(`Information of ${person.name} has already been removed from server`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setClassName(null)\n          }, 5000)\n        })\n      }\n    }\n    else\n    {\n      const maxId = Math.max(...persons.map(p => p.id), 0);\n      const newPerson = {name: newName, number: newNumber, id: (maxId + 1)}\n      personService\n        .create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setClassName('notification')\n          setNotificationMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setClassName(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(`$Failed to add ${newName} to phonebook`, error)\n          setClassName('error')\n          setNotificationMessage(`$Failed to add ${newName} to phonebook`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setClassName(null)\n          }, 5000)\n        })\n    }\n\n\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (event) => {\n    event.preventDefault()\n    const person = event.target\n    if (window.confirm(`Delete ${person.name} ?`))\n    {\n      personService\n      .remove(person.id)\n      .then(response => {\n        setPersons(persons.filter(p => p.name !== person.name))\n        setClassName('notification')\n        setNotificationMessage(`Deleted ${person.name}`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setClassName(null)\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(`Information of ${person.name} has already been removed from server`, error)\n        setClassName('error')\n        setNotificationMessage(`Information of ${person.name} has already been removed from server`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setClassName(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const handleSearhName = (event) => {\n    setSearchName(event.target.value)  \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)  \n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)  \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        searchName = {searchName}\n        handleSearhName = {handleSearhName}\n      />\n      <h2>Add a new</h2>\n      <Notification message={notificationMessage} className = {className} />\n      <PersonForm\n        newName = {newName}\n        newNumber = {newNumber }\n        handleNameChange ={handleNameChange}\n        handleNumberChange = {handleNumberChange}\n        addPerson = {addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons = {persons}\n        searchName = {searchName}\n        deletePerson = {deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}